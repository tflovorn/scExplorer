package tempAll

// Container for variables relevant at all temperatures.
type EnvAll struct {
	// Program parameters:
	PointsPerSide int // length of one side of the lattice

	// Constant physical parameters:
	X   float64 // average density of holons
	T0  float64 // nn one-holon hopping energy
	Thp float64 // direct nnn one-holon hopping energy
	Tz  float64 // inter-planar one-holon hopping energy

	// Dynamically determined physical parameters:
	D1   float64 // nnn hopping parameter generated by two-holon hopping
	Mu_h float64 // holon chemical potential

	// Cached values:
	epsilonMinCache  float64
	lastEpsilonMinD1 float64
}

func (env *EnvAll) Th() float64 {
	return env.T0 * (1.0 - env.X)
}

func (env *EnvAll) EpsilonMin() float64 {
	if env.D1 != env.lastEpsilonMinD1 {
		env.epsilonMinCache = EpsilonMin(env)
		env.lastEpsilonMinD1 = env.D1
	}
	return env.epsilonMinCache
}
